const { Model } = require("objection");

class Rule extends Model {
  static get tableName() {
    return "rules";
  }
}

Rule.findAllPreMatch = function() {
  return this.query()
    .where({
       active: true
    })
    .whereNot("category", "stats")
    .where(function() {
      this.where({ inplay_only: false }).orWhereNull("inplay_only");
    })
    .select(
      "id",
      "code",
      "label",
      "type",
      "min",
      "max",
      "step",
      "direct",
      "description",
      "category",
      "active"
    )
    .orderBy("priority");
};

Rule.findAllInPlay = function() {
  return this.query()
    .where({
      active: true
    })
    .whereIn("category", ["stats", "odds"])
    .select(
      "id",
      "code",
      "label",
      "description",
      "category",
      "active",
      "has_team"
    )
    .orderBy("priority");
};

Rule.bulkCreate = function(items) {
  items = items.map(item => {
    const {
      id,
      code,
      label,
      type,
      min,
      max,
      step,
      inplay_only,
      description,
      direct,
      category,
      active,
      has_team,
      overall,
      home,
      away
    } = item;
    return {
      id,
      code,
      label,
      type,
      min,
      max,
      step,
      inplay_only,
      description,
      direct,
      category,
      active,
      has_team,
      overall,
      home,
      away
    };
  });
  return this.knex()
    .table("rules")
    .insert(items)
    .onConflict(["id", "id"])
    .merge();
};

const pairs = {
  "1": "8",
  "2": "9",
  "3": "7",
  "4": "5",
  "5": "6",
  "6": "4",
  "7": "2",
  "8": "3",
  "9": "1",
  "10": "16",
  "11": "15",
  "12": "18",
  "13": "17",
  "14": "14",
  "15": "13",
  "16": "22",
  "17": "21",
  "18": "24",
  "19": "23",
  "20": "20",
  "21": "19",
  "22": "26",
  "23": "25",
  "24": "10",
  "25": "11",
  "26": "12",
  "27": "26",
  "28": "8",
  "29": "9",
  "30": "7",
  "31": "23",
  "32": "22",
  "33": "21",
  "34": "24",
  "35": "25",
  "36": "5",
  "37": "6",
  "38": "4",
  "39": "2",
  "40": "3",
  "41": "1",
  "42": "20",
  "43": "19",
  "44": "18",
  "45": "17",
  "46": "10",
  "47": "11",
  "48": "12",
  "49": "13",
  "50": "14",
  "51": "15",
  "52": "16",
  "68": "8",
  "54": "7",
  "55": "4",
  "56": "6",
  "57": "999",
  "58": "999",
  "59": "999",
  "60": "1",
  "61": "2",
  "62": "3",
  "63": "5",
  "53": "42",
  "64": "43",
  "65": "44",
  "66": "45",
  "67": "46",
  "69": "32",
  "70": "34",
  "71": "31",
  "72": "30",
  "73": "36",
  "74": "37",
  "75": "35",
  "76": "39",
  "77": "40",
  "78": "38",
  "79": "41",
  "80": "8",
  "81": "7",
  "82": "6",
  "83": "47",
  "84": "48",
  "85": "5",
  "86": "50",
  "87": "11",
  "88": "10",
  "89": "9",
  "90": "12",
  "91": "13",
  "92": "49",
  "93": "15",
  "94": "16",
  "95": "14",
  "96": "18",
  "97": "19",
  "98": "17",
  "99": "20",
  "100": "21",
  "101": "3",
  "102": "4",
  "103": "22",
  "104": "2",
  "105": "51",
  "106": "24",
  "107": "25",
  "108": "23",
  "109": "27",
  "110": "28",
  "111": "26",
  "112": "29",
  "113": "1",
  "114": "3",
  "115": "2",
  "116": "4",
  "117": "5",
  "118": "1",
  "119": "3",
  "120": "4",
  "121": "56",
  "122": "9",
  "123": "11",
  "124": "12",
  "125": "13",
  "126": "14",
  "127": "10",
  "128": "7",
  "129": "8",
  "130": "5",
  "131": "6",
  "132": "50",
  "133": "51",
  "134": "52",
  "135": "47",
  "136": "48",
  "137": "49",
  "138": "1",
  "139": "2",
  "140": "53",
  "141": "54",
  "142": "55",
  "143": "999",
  "144": "999",
  "145": "15",
  "146": "35",
  "147": "999",
  "148": "999",
  "149": "999",
  "150": "999",
  "151": "999",
  "152": "999",
  "153": "999",
  "154": "999",
  "155": "999",
  "156": "999",
  "157": "999",
  "158": "999",
  "159": "999",
  "160": "999",
  "161": "999",
  "162": "999",
  "163": "999",
  "164": "999",
  "165": "999",
  "166": "999",
  "167": "999",
  "168": "999",
  "169": "999",
  "170": "999",
  "171": "999",
  "172": "999",
  "173": "999",
  "174": "999",
  "175": "16",
  "176": "36",
  "177": "999",
  "178": "999",
  "179": "999",
  "180": "999",
  "181": "999",
  "182": "999",
  "183": "999",
  "184": "999",
  "185": "999",
  "186": "999",
  "187": "999",
  "188": "999",
  "189": "999",
  "190": "999",
  "191": "999",
  "192": "999",
  "193": "999",
  "194": "999",
  "195": "999",
  "196": "999",
  "197": "999",
  "198": "999",
  "199": "999",
  "200": "999",
  "201": "17",
  "202": "37",
  "203": "999",
  "204": "999",
  "205": "999",
  "206": "999",
  "207": "18",
  "208": "38",
  "209": "999",
  "210": "999",
  "211": "999",
  "212": "999",
  "213": "19",
  "214": "39",
  "215": "999",
  "216": "999",
  "217": "999",
  "218": "999",
  "219": "20",
  "220": "40",
  "221": "999",
  "222": "999",
  "223": "999",
  "224": "999",
  "225": "21",
  "226": "999",
  "227": "999",
  "228": "999",
  "229": "999",
  "230": "22",
  "231": "999",
  "232": "999",
  "233": "999",
  "234": "999",
  "235": "999",
  "236": "23",
  "237": "999",
  "238": "999",
  "239": "999",
  "240": "999",
  "241": "999",
  "242": "999",
  "243": "999",
  "244": "999",
  "245": "999",
  "246": "999",
  "247": "999",
  "248": "24",
  "249": "41",
  "250": "999",
  "251": "999",
  "252": "999",
  "253": "999",
  "254": "999",
  "255": "999",
  "256": "999",
  "257": "999",
  "258": "999",
  "259": "999",
  "260": "999",
  "261": "999",
  "262": "999",
  "263": "999",
  "264": "999",
  "265": "999",
  "266": "999",
  "267": "999",
  "268": "999",
  "269": "999",
  "270": "999",
  "271": "999",
  "272": "999",
  "273": "999",
  "274": "999",
  "275": "999",
  "276": "999",
  "277": "999",
  "278": "25",
  "279": "42",
  "280": "999",
  "281": "999",
  "282": "999",
  "283": "999",
  "284": "999",
  "285": "999",
  "286": "999",
  "287": "999",
  "288": "999",
  "289": "999",
  "290": "999",
  "291": "999",
  "292": "999",
  "293": "999",
  "294": "999",
  "295": "999",
  "296": "999",
  "297": "999",
  "298": "999",
  "299": "999",
  "300": "999",
  "301": "999",
  "302": "999",
  "303": "999",
  "304": "26",
  "305": "43",
  "306": "999",
  "307": "999",
  "308": "999",
  "309": "999",
  "310": "27",
  "311": "44",
  "312": "999",
  "313": "999",
  "314": "999",
  "315": "999",
  "316": "28",
  "317": "45",
  "318": "999",
  "319": "999",
  "320": "999",
  "321": "999",
  "322": "29",
  "323": "46",
  "324": "999",
  "325": "999",
  "326": "999",
  "327": "999",
  "328": "30",
  "329": "999",
  "330": "999",
  "331": "999",
  "332": "999",
  "333": "31",
  "334": "999",
  "335": "999",
  "336": "999",
  "337": "999",
  "338": "999",
  "339": "32",
  "340": "999",
  "341": "999",
  "342": "999",
  "343": "999",
  "344": "999",
  "345": "999",
  "346": "999",
  "347": "999",
  "348": "33",
  "349": "34",
  "350": "9",
  "351": "11",
  "352": "12",
  "353": "10",
  "354": "2",
  "355": "4",
  "356": "3",
  "357": "5",
  "358": "7",
  "359": "8",
  "360": "6",
  "361": "1",
  "362": "13",
  "363": "14",
  "364": "14",
  "365": "15",
  "366": "7",
  "367": "5",
  "368": "6",
  "369": "4",
  "370": "14",
  "371": "9",
  "372": "13",
  "373": "8",
  "374": "11",
  "375": "3",
  "376": "2",
  "377": "1",
  "378": "12",
  "379": "10"
}
;

async function populate() {
  const f = [];
  for (var key in pairs) {
    var value = pairs[key];
    f.push(Rule.query().patchAndFetchById(key, { priority: value }));

    console.log(key);
  }
  Promise.all(f);
}


module.exports = Rule;
